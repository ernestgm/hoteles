imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi:             ~
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    globals:
        fos_csrf_provider: "@form.csrf_provider"


# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:        [FrontEndBundle, BackEndBundle, UserBundle]
    #java: /usr/bin/java
    node: "%nodejs_path%"
    filters:
            uglifyjs2:
                # the path to the uglifyjs executable
                # bin: C:/Users/Standa/AppData/Roaming/npm/node_modules/uglify-js/bin/uglifyjs
                bin: "%uglifyjs_path%"
            cssrewrite: ~
            uglifycss:
                # bin:  "C:/Users/Standa/AppData/Roaming/npm/node_modules/uglifycss/uglifycss"
                bin: "%uglifycss_path%"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true


# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

# fos_user Configuration
fos_user:
    db_driver: orm
    firewall_name: main
    user_class: UserBundle\Entity\User

    registration:
        confirmation:
            enabled:              false
            template:             FOSUserBundle:Registration:email.html.twig
            from_email:
                address:              noreply@comunication.ch
                sender_name:          COMUNICATION Registration

    resetting:
        token_ttl:            86400
        email:
            template:              FOSUserBundle:Resetting:email.html.twig
            from_email:
                address:              noreply@comunication.ch
                sender_name:          COMUNICATION Password Reset
    service:
        mailer:               fos_user.mailer.twig_swift
        email_canonicalizer:  fos_user.util.canonicalizer.default
        token_generator:      fos_user.util.token_generator.default
        username_canonicalizer:  fos_user.util.canonicalizer.default
        user_manager:         fos_user.user_manager.default

jms_i18n_routing:
    default_locale: es
    locales: [en, es]
    strategy: prefix

jms_translation:
    configs:
        app:
            dirs: [%kernel.root_dir%, %kernel.root_dir%/../src ]
            output_dir: %kernel.root_dir%/Resources/translations
#            ignored_domains: [routes, validators]
            excluded_names: ["*TestCase.php", "*Test.php"]
            excluded_dirs: [cache, data, logs]
            #extractors: [alias_of_the_extractor]

jms_di_extra:
    automatic_controller_injections:
        properties:
            request: "@request"
            router: "@router"

        method_calls:
            setRouter: ["@router"]
    locations:
        all_bundles: false
        bundles: [FrontEndBundle, BackendBundle, UserBundle]
        directories:
#            - "%kernel.root_dir%/../src/FrontEndBundle/Form"
    # TODO: grep is disabled due to process spawning errors on the servers.
    # The reason might be the maximum number of threads/processes apache is allowed to spawn
    # On AWS this number is restricted by memory: https://dustycodes.wordpress.com/2012/02/09/increasing-number-of-threads-per-process/
    # So using an EC2 instance with more memory might be a solution
    disable_grep: true